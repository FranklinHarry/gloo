swagger: '2.0'
info:
  title: fn
  description: The open source serverless platform.
  version: "0.2.4"
# the domain of the service
host: "127.0.0.1:8080"
# array of all schemes that your API supports
schemes:
  - https
  - http
# will be prefixed to all paths
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /apps:
    get:
      summary: "Get all app names."
      description: "Get a list of all the apps in the system, returned in alphabetical order."
      tags:
        - Apps
      parameters:
        - name: cursor
          description: Cursor from previous response.next_cursor to begin results after, if any.
          required: false
          type: string
          in: query
        - name: per_page
          description: Number of results to return, defaults to 30. Max of 100.
          required: false
          type: integer
          in: query
      responses:
        200:
          description: List of apps.
          schema:
            $ref: '#/definitions/AppsWrapper'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /apps/{app}/routes:
    get:
      summary: Get route list by app name.
      description: This will list routes for a particular app, returned in alphabetical order.
      tags:
        - Routes
      parameters:
        - name: app
          in: path
          description: Name of app for this set of routes.
          required: true
          type: string
        - name: image
          description: Route image to match, exact.
          required: false
          type: string
          in: query
        - name: cursor
          description: Cursor from previous response.next_cursor to begin results after, if any.
          required: false
          type: string
          in: query
        - name: per_page
          description: Number of results to return, defaults to 30. Max of 100.
          required: false
          type: integer
          in: query
      responses:
        200:
          description: Route information
          schema:
            $ref: '#/definitions/RoutesWrapper'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Route:
    type: object
    properties:
      app_id:
        type: string
        description: App ID
      path:
        type: string
        description: URL path that will be matched to this route
        readOnly: true
      image:
        description: Name of Docker image to use in this route. You should include the image tag, which should be a version number, to be more accurate. Can be overridden on a per route basis with route.image.
        type: string
      headers:
        type: object
        description: Map of http headers that will be sent with the response
        additionalProperties:
          type: array
          items:
            type: string
      memory:
        type: integer
        format: uint64
        description: Max usable memory for this route (MiB).
      cpus:
        type: string
        description: Max usable CPU cores for this route. Value in MilliCPUs (eg. 500m) or as floating-point (eg. 0.5)
      type:
        enum:
          - sync
          - async
        description: Route type
        type: string
      format:
        enum:
          - default
          - http
          - json
        description: Payload format sent into function.
        type: string
      config:
        type: object
        description: Route configuration - overrides application configuration
        additionalProperties:
          type: string
      timeout:
        type: integer
        default: 30
        format: int32
        description: Timeout for executions of this route. Value in Seconds
      idle_timeout:
        type: integer
        default: 30
        format: int32
        description: Hot functions idle timeout before termination. Value in Seconds
      annotations:
        type: object
        description: Route annotations - this is a map of annotations attached to this route, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when route was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that route was updated. Always in UTC.
        readOnly: true

  App:
    type: object
    properties:
      id:
        type: string
        description: App ID
        readOnly: true
      name:
        type: string
        description: "Name of this app. Must be different than the image name. Can ony contain alphanumeric, -, and _."
        readOnly: true
      config:
        type: object
        description: Application function configuration, applied to all routes.
        additionalProperties:
          type: string
      annotations:
        type: object
        description: Application annotations - this is a map of annotations attached to this app, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when app was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that app was updated. Always in UTC.
        readOnly: true

  RoutesWrapper:
    type: object
    required:
      - routes
    properties:
      next_cursor:
        type: string
        description: cursor to send with subsequent request to receive the next page, if non-empty
        readOnly: true
      routes:
        type: array
        items:
          $ref: '#/definitions/Route'
      error:
        $ref: '#/definitions/ErrorBody'

  RouteWrapper:
    type: object
    required:
      - route
    properties:
      message:
        type: string
      error:
        $ref: '#/definitions/ErrorBody'
      route:
        $ref: '#/definitions/Route'

  AppsWrapper:
    type: object
    required:
      - apps
    properties:
      next_cursor:
        type: string
        description: cursor to send with subsequent request to receive the next page, if non-empty
        readOnly: true
      apps:
        type: array
        items:
          $ref: '#/definitions/App'
      error:
        $ref: '#/definitions/ErrorBody'

  AppWrapper:
    type: object
    required:
      - app
    properties:
      app:
        $ref: '#/definitions/App'
      error:
        $ref: '#/definitions/ErrorBody'

  ErrorBody:
    type: object
    properties:
      message:
        type: string
        readOnly: true
      fields:
        type: string
        readOnly: true

  Error:
    type: object
    properties:
      error:
        $ref: '#/definitions/ErrorBody'
