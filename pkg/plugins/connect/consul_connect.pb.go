// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: consul_connect.proto

/*
Package connect is a generated protocol buffer package.

It is generated from these files:
	consul_connect.proto

It has these top-level messages:
	ConsulConnect
*/
package connect

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/types"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "github.com/gogo/protobuf/gogoproto"

import time "time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ConsulConnect contains the configuration necessary to perform client certificate-based
// authorization using a REST call to the Authorize endpoint of Consul Connect.
type ConsulConnect struct {
	// The name of the service who owns this proxy
	// Target must be delivered by the filter as part of the authorize request payload
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// the hostname of the authorization REST service
	AuthorizeHostname string `protobuf:"bytes,2,opt,name=authorize_hostname,json=authorizeHostname,proto3" json:"authorize_hostname,omitempty"`
	// the name of the Envoy Cluster representing the authorization REST service
	AuthorizeClusterName string `protobuf:"bytes,3,opt,name=authorize_cluster_name,json=authorizeClusterName,proto3" json:"authorize_cluster_name,omitempty"`
	// Connection Timeout tells the filter to set a timeout for unresponsive connections created to this upstream.
	// If not provided by the user, it will set to a default value
	RequestTimeout *time.Duration `protobuf:"bytes,4,opt,name=request_timeout,json=requestTimeout,stdduration" json:"request_timeout,omitempty"`
}

func (m *ConsulConnect) Reset()                    { *m = ConsulConnect{} }
func (m *ConsulConnect) String() string            { return proto.CompactTextString(m) }
func (*ConsulConnect) ProtoMessage()               {}
func (*ConsulConnect) Descriptor() ([]byte, []int) { return fileDescriptorConsulConnect, []int{0} }

func (m *ConsulConnect) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ConsulConnect) GetAuthorizeHostname() string {
	if m != nil {
		return m.AuthorizeHostname
	}
	return ""
}

func (m *ConsulConnect) GetAuthorizeClusterName() string {
	if m != nil {
		return m.AuthorizeClusterName
	}
	return ""
}

func (m *ConsulConnect) GetRequestTimeout() *time.Duration {
	if m != nil {
		return m.RequestTimeout
	}
	return nil
}

func init() {
	proto.RegisterType((*ConsulConnect)(nil), "envoy.config.filter.network.consul_connect.v2.ConsulConnect")
}

func init() { proto.RegisterFile("consul_connect.proto", fileDescriptorConsulConnect) }

var fileDescriptorConsulConnect = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0xc7, 0xe5, 0xb6, 0xaa, 0x54, 0x7f, 0xfa, 0x40, 0x44, 0x11, 0x84, 0x0e, 0x10, 0x98, 0xba,
	0xe0, 0x48, 0x65, 0x61, 0x43, 0x6a, 0x18, 0x3a, 0x31, 0x54, 0xec, 0x91, 0x9b, 0x5e, 0x5c, 0x8b,
	0xd4, 0x07, 0xce, 0x39, 0x08, 0x9e, 0x84, 0x67, 0x61, 0xe2, 0x4d, 0x98, 0x79, 0x02, 0x56, 0xd4,
	0x38, 0x2d, 0x52, 0xb6, 0xbf, 0xee, 0x7e, 0xbf, 0x3b, 0xe9, 0xcf, 0xc3, 0x1c, 0x4d, 0xe5, 0xca,
	0x2c, 0x47, 0x63, 0x20, 0x27, 0xf1, 0x64, 0x91, 0x30, 0xb8, 0x02, 0x53, 0xe3, 0xab, 0xc8, 0xd1,
	0x14, 0x5a, 0x89, 0x42, 0x97, 0x04, 0x56, 0x18, 0xa0, 0x17, 0xb4, 0x8f, 0xa2, 0x63, 0xd4, 0xd3,
	0xf1, 0x99, 0x42, 0x54, 0x25, 0x24, 0x8d, 0xbc, 0x74, 0x45, 0xb2, 0x72, 0x56, 0x92, 0x46, 0xe3,
	0xcf, 0x8d, 0x4f, 0x6a, 0x59, 0xea, 0x95, 0x24, 0x48, 0x76, 0xa1, 0x5d, 0x84, 0x0a, 0x15, 0x36,
	0x31, 0xd9, 0x26, 0x3f, 0xbd, 0xfc, 0x61, 0xfc, 0x7f, 0xda, 0x3c, 0x49, 0xfd, 0x8f, 0xe0, 0x82,
	0x0f, 0x49, 0x5a, 0x05, 0x14, 0xb1, 0x98, 0x4d, 0x46, 0xb3, 0xd1, 0xc7, 0xf7, 0x67, 0x7f, 0x60,
	0x7b, 0x31, 0x5b, 0xb4, 0x8b, 0xe0, 0x86, 0x07, 0xd2, 0xd1, 0x1a, 0xad, 0x7e, 0x83, 0x6c, 0x8d,
	0x15, 0x19, 0xb9, 0x81, 0xa8, 0xd7, 0xc5, 0x8f, 0xf6, 0xd0, 0xbc, 0x65, 0x82, 0x5b, 0x7e, 0xfc,
	0x67, 0xe6, 0xa5, 0xab, 0x08, 0x6c, 0xd6, 0xd8, 0xfd, 0xae, 0x1d, 0xee, 0xc1, 0xd4, 0x73, 0xf7,
	0xdb, 0x03, 0x73, 0x7e, 0x68, 0xe1, 0xd9, 0x41, 0x45, 0x19, 0xe9, 0x0d, 0xa0, 0xa3, 0x68, 0x10,
	0xb3, 0xc9, 0xbf, 0xe9, 0xa9, 0xf0, 0xc5, 0x88, 0x5d, 0x31, 0xe2, 0xae, 0x2d, 0x66, 0x36, 0x78,
	0xff, 0x3a, 0x67, 0x8b, 0x83, 0xd6, 0x7b, 0xf0, 0xda, 0x72, 0xd8, 0x80, 0xd7, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x9b, 0x7e, 0xc0, 0xf0, 0x96, 0x01, 0x00, 0x00,
}
