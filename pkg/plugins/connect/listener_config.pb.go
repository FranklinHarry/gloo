// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: listener_config.proto

/*
Package connect is a generated protocol buffer package.

It is generated from these files:
	listener_config.proto

It has these top-level messages:
	ListenerConfig
	InboundListenerConfig
	OutboundListenerConfig
	TcpProxyConfig
*/
package connect

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_config_filter_network_client_certificate_restriction_v2 "github.com/solo-io/gloo-enterprise/pkg/plugins/connect"
import _ "gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// the listenerConfig must be either an InboundListener or an OutboundListener
type ListenerConfig struct {
	// Types that are valid to be assigned to Config:
	//	*ListenerConfig_Inbound
	//	*ListenerConfig_Outbound
	Config isListenerConfig_Config `protobuf_oneof:"config"`
}

func (m *ListenerConfig) Reset()                    { *m = ListenerConfig{} }
func (m *ListenerConfig) String() string            { return proto.CompactTextString(m) }
func (*ListenerConfig) ProtoMessage()               {}
func (*ListenerConfig) Descriptor() ([]byte, []int) { return fileDescriptorListenerConfig, []int{0} }

type isListenerConfig_Config interface {
	isListenerConfig_Config()
	Equal(interface{}) bool
}

type ListenerConfig_Inbound struct {
	Inbound *InboundListenerConfig `protobuf:"bytes,1,opt,name=inbound,oneof"`
}
type ListenerConfig_Outbound struct {
	Outbound *OutboundListenerConfig `protobuf:"bytes,2,opt,name=outbound,oneof"`
}

func (*ListenerConfig_Inbound) isListenerConfig_Config()  {}
func (*ListenerConfig_Outbound) isListenerConfig_Config() {}

func (m *ListenerConfig) GetConfig() isListenerConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ListenerConfig) GetInbound() *InboundListenerConfig {
	if x, ok := m.GetConfig().(*ListenerConfig_Inbound); ok {
		return x.Inbound
	}
	return nil
}

func (m *ListenerConfig) GetOutbound() *OutboundListenerConfig {
	if x, ok := m.GetConfig().(*ListenerConfig_Outbound); ok {
		return x.Outbound
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ListenerConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ListenerConfig_OneofMarshaler, _ListenerConfig_OneofUnmarshaler, _ListenerConfig_OneofSizer, []interface{}{
		(*ListenerConfig_Inbound)(nil),
		(*ListenerConfig_Outbound)(nil),
	}
}

func _ListenerConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ListenerConfig)
	// config
	switch x := m.Config.(type) {
	case *ListenerConfig_Inbound:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Inbound); err != nil {
			return err
		}
	case *ListenerConfig_Outbound:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Outbound); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ListenerConfig.Config has unexpected type %T", x)
	}
	return nil
}

func _ListenerConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ListenerConfig)
	switch tag {
	case 1: // config.inbound
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InboundListenerConfig)
		err := b.DecodeMessage(msg)
		m.Config = &ListenerConfig_Inbound{msg}
		return true, err
	case 2: // config.outbound
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OutboundListenerConfig)
		err := b.DecodeMessage(msg)
		m.Config = &ListenerConfig_Outbound{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ListenerConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ListenerConfig)
	// config
	switch x := m.Config.(type) {
	case *ListenerConfig_Inbound:
		s := proto.Size(x.Inbound)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ListenerConfig_Outbound:
		s := proto.Size(x.Outbound)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// configuration for the inbound listener
// this listener does authentication and connects
// clients to the local service
type InboundListenerConfig struct {
	// configuration for tls-based auth filter
	AuthConfig *envoy_config_filter_network_client_certificate_restriction_v2.ClientCertificateRestriction `protobuf:"bytes,1,opt,name=auth_config,json=authConfig" json:"auth_config,omitempty"`
	// configuration for the tcp proxy filter
	ProxyConfig *TcpProxyConfig `protobuf:"bytes,2,opt,name=proxy_config,json=proxyConfig" json:"proxy_config,omitempty"`
}

func (m *InboundListenerConfig) Reset()         { *m = InboundListenerConfig{} }
func (m *InboundListenerConfig) String() string { return proto.CompactTextString(m) }
func (*InboundListenerConfig) ProtoMessage()    {}
func (*InboundListenerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptorListenerConfig, []int{1}
}

func (m *InboundListenerConfig) GetAuthConfig() *envoy_config_filter_network_client_certificate_restriction_v2.ClientCertificateRestriction {
	if m != nil {
		return m.AuthConfig
	}
	return nil
}

func (m *InboundListenerConfig) GetProxyConfig() *TcpProxyConfig {
	if m != nil {
		return m.ProxyConfig
	}
	return nil
}

// The configuration for the outbound listeners which serve as "tcp routes"
type OutboundListenerConfig struct {
	// configuration for the tcp proxy filter
	ProxyConfig *TcpProxyConfig `protobuf:"bytes,1,opt,name=proxy_config,json=proxyConfig" json:"proxy_config,omitempty"`
}

func (m *OutboundListenerConfig) Reset()         { *m = OutboundListenerConfig{} }
func (m *OutboundListenerConfig) String() string { return proto.CompactTextString(m) }
func (*OutboundListenerConfig) ProtoMessage()    {}
func (*OutboundListenerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptorListenerConfig, []int{2}
}

func (m *OutboundListenerConfig) GetProxyConfig() *TcpProxyConfig {
	if m != nil {
		return m.ProxyConfig
	}
	return nil
}

type TcpProxyConfig struct {
	// The name of the destination upstream for the listener
	DestinationUpstream string `protobuf:"bytes,1,opt,name=destination_upstream,json=destinationUpstream,proto3" json:"destination_upstream,omitempty"`
}

func (m *TcpProxyConfig) Reset()                    { *m = TcpProxyConfig{} }
func (m *TcpProxyConfig) String() string            { return proto.CompactTextString(m) }
func (*TcpProxyConfig) ProtoMessage()               {}
func (*TcpProxyConfig) Descriptor() ([]byte, []int) { return fileDescriptorListenerConfig, []int{3} }

func (m *TcpProxyConfig) GetDestinationUpstream() string {
	if m != nil {
		return m.DestinationUpstream
	}
	return ""
}

func init() {
	proto.RegisterType((*ListenerConfig)(nil), "gloo.api.v1.ListenerConfig")
	proto.RegisterType((*InboundListenerConfig)(nil), "gloo.api.v1.InboundListenerConfig")
	proto.RegisterType((*OutboundListenerConfig)(nil), "gloo.api.v1.OutboundListenerConfig")
	proto.RegisterType((*TcpProxyConfig)(nil), "gloo.api.v1.TcpProxyConfig")
}
func (this *ListenerConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListenerConfig)
	if !ok {
		that2, ok := that.(ListenerConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Config == nil {
		if this.Config != nil {
			return false
		}
	} else if this.Config == nil {
		return false
	} else if !this.Config.Equal(that1.Config) {
		return false
	}
	return true
}
func (this *ListenerConfig_Inbound) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListenerConfig_Inbound)
	if !ok {
		that2, ok := that.(ListenerConfig_Inbound)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Inbound.Equal(that1.Inbound) {
		return false
	}
	return true
}
func (this *ListenerConfig_Outbound) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListenerConfig_Outbound)
	if !ok {
		that2, ok := that.(ListenerConfig_Outbound)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Outbound.Equal(that1.Outbound) {
		return false
	}
	return true
}
func (this *InboundListenerConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InboundListenerConfig)
	if !ok {
		that2, ok := that.(InboundListenerConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AuthConfig.Equal(that1.AuthConfig) {
		return false
	}
	if !this.ProxyConfig.Equal(that1.ProxyConfig) {
		return false
	}
	return true
}
func (this *OutboundListenerConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OutboundListenerConfig)
	if !ok {
		that2, ok := that.(OutboundListenerConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ProxyConfig.Equal(that1.ProxyConfig) {
		return false
	}
	return true
}
func (this *TcpProxyConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TcpProxyConfig)
	if !ok {
		that2, ok := that.(TcpProxyConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.DestinationUpstream != that1.DestinationUpstream {
		return false
	}
	return true
}

func init() { proto.RegisterFile("listener_config.proto", fileDescriptorListenerConfig) }

var fileDescriptorListenerConfig = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0xcb, 0xd3, 0x40,
	0x10, 0xc6, 0x8d, 0x87, 0x5a, 0x37, 0xd2, 0x43, 0x6c, 0x45, 0x2a, 0x88, 0xc4, 0x8b, 0x97, 0xee,
	0xd2, 0x0a, 0x9e, 0x44, 0xb0, 0xb9, 0x28, 0x08, 0x4a, 0x50, 0x10, 0x3d, 0x84, 0x74, 0xbb, 0x4d,
	0x87, 0xa6, 0x3b, 0xcb, 0x66, 0x12, 0x2d, 0xf8, 0x55, 0xbc, 0xfb, 0x85, 0xfc, 0x02, 0xef, 0x27,
	0x79, 0x49, 0x36, 0xfd, 0x13, 0x5a, 0x28, 0xef, 0x6d, 0x92, 0x67, 0xe6, 0x79, 0x66, 0x7e, 0x2c,
	0x1b, 0xe5, 0x50, 0x90, 0xd2, 0xca, 0x26, 0x12, 0xf5, 0x0a, 0x32, 0x6e, 0x2c, 0x12, 0x06, 0x7e,
	0x96, 0x23, 0xf2, 0xd4, 0x00, 0xaf, 0xa6, 0xe3, 0x5c, 0xe9, 0x0a, 0x77, 0x22, 0x35, 0x20, 0x5c,
	0xe5, 0x5a, 0xc5, 0x0a, 0x72, 0x52, 0x56, 0x68, 0x45, 0xbf, 0xd0, 0x6e, 0x84, 0xcc, 0x41, 0x69,
	0x4a, 0xa4, 0xb2, 0x04, 0x2b, 0x90, 0x29, 0xa9, 0xc4, 0xaa, 0x82, 0x2c, 0x48, 0x02, 0xd4, 0xa2,
	0x9a, 0x5d, 0xe9, 0x70, 0xd1, 0xe3, 0x61, 0x86, 0x19, 0x36, 0xa5, 0xa8, 0x2b, 0xf7, 0x37, 0xfc,
	0xeb, 0xb1, 0xc1, 0xa7, 0x76, 0xd5, 0xa8, 0x89, 0x0f, 0xde, 0xb1, 0x07, 0xa0, 0x17, 0x58, 0xea,
	0xe5, 0x53, 0xef, 0x85, 0xf7, 0xca, 0x9f, 0x85, 0xfc, 0x64, 0x6b, 0xfe, 0xd1, 0x69, 0xdd, 0xa1,
	0x0f, 0xf7, 0xe2, 0xfd, 0x50, 0xf0, 0x9e, 0xf5, 0xb1, 0x24, 0x67, 0x70, 0xbf, 0x31, 0x78, 0xd9,
	0x31, 0xf8, 0xdc, 0x8a, 0x67, 0x0e, 0x87, 0xb1, 0x79, 0x9f, 0xf5, 0x1c, 0x8b, 0xf0, 0xbf, 0xc7,
	0x46, 0x17, 0x13, 0x83, 0x3f, 0xcc, 0x4f, 0x4b, 0x5a, 0xb7, 0x7c, 0xdb, 0x55, 0x7f, 0xf2, 0x86,
	0x24, 0x6f, 0xa1, 0x3b, 0x92, 0xbc, 0x25, 0xc9, 0xaf, 0x70, 0xaa, 0x66, 0x3c, 0x6a, 0x3a, 0xa2,
	0x63, 0x43, 0x7c, 0xd4, 0x63, 0x56, 0xe7, 0x1d, 0x20, 0x3d, 0x32, 0x16, 0x7f, 0xef, 0xf6, 0xf1,
	0xee, 0xd0, 0x67, 0x9d, 0x43, 0xbf, 0x4a, 0xf3, 0xa5, 0xee, 0x71, 0x23, 0xb1, 0x6f, 0x8e, 0x1f,
	0xe1, 0x77, 0xf6, 0xe4, 0x32, 0x87, 0x33, 0x67, 0xef, 0x8e, 0xce, 0x11, 0x1b, 0x74, 0xe5, 0x60,
	0xca, 0x86, 0x4b, 0x55, 0x10, 0xe8, 0xb4, 0x3e, 0x23, 0x29, 0x4d, 0x41, 0x56, 0xa5, 0xdb, 0xc6,
	0xf9, 0x61, 0xfc, 0xf8, 0x44, 0xfb, 0xd6, 0x4a, 0xf3, 0xb7, 0xff, 0x6e, 0x9e, 0x7b, 0x3f, 0xde,
	0x64, 0x40, 0xeb, 0x72, 0xc1, 0x25, 0x6e, 0x45, 0x81, 0x39, 0x4e, 0x00, 0x45, 0xbd, 0xc6, 0x44,
	0x69, 0x52, 0xd6, 0x58, 0x28, 0x94, 0x30, 0x9b, 0x4c, 0x98, 0xbc, 0xcc, 0x40, 0x17, 0xf5, 0xfb,
	0xd5, 0x4a, 0xd2, 0xa2, 0xd7, 0xbc, 0xad, 0xd7, 0xb7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x14, 0xfe,
	0x33, 0xee, 0x05, 0x03, 0x00, 0x00,
}
